geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point() +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)), colour="red")
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red", label="League Average")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red", label="League Average") +
geom_text()
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age),label="League Average"),
colour="red") +
geom_text()
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red") +
geom_text(label="League Average")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders.csv")
View(ops_leaders)
ops_leaders <- ops_leaders %>%
group_by(Age) +
summarise(avg_ops_plus = mean(OPS..))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_leaders <- ops_leaders %>%
group_by(Age) +
summarise(avg_ops_plus = mean(OPS_PL))
View(avg_pitcher_age_summary)
ops_leaders <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = mean(OPS_PL))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = mean(OPS_PL))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
View(ops_by_age)
View(ops_by_age)
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
active_batters <- active_batters %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Clean data to only include certain subset of player:
# The active_batters file will contain players who played at least 40 games
# The active_pitchers file will contain pitchers who have pitched at least 30 innings
active_batters <- active_batters[active_batters$G > 40, ]
active_pitchers <- active_pitchers[active_pitchers$IP > 30.0, ]
# Isolate columns of interest
active_pitchers <- active_pitchers %>%
dplyr::select(Name, Age, Tm, Lg)
active_batters <- active_batters %>%
dplyr::select(Name, Age, Tm, Lg)
# Create summary table with average ages for each team
avg_pitcher_age_summary <- active_pitchers %>%
group_by(Tm) %>%
summarise(avg_pitcher_age = round(mean(Age), 3))
avg_batter_age_summary <- active_batters %>%
group_by(Tm) %>%
summarise(avg_batter_age = round(mean(Age), 3))
# Merge tables
avg_age_summary <- merge(avg_pitcher_age_summary, avg_batter_age_summary, by="Tm")
# Plot
library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
# Now lets take all players with at least 600 AB (league-average-8/9)
# and analyze leaders by age
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
gg_point()
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
player_count = count(Name))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
player_count = count(Age))
ops_by_age <- ops_leaders %>%
summarize(player_count = count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_by_age <- ops_leaders %>%
summarize(player_count = dplyr::count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_by_age <- ops_leaders %>%
summarise(player_count = dplyr::count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
type_of(Age)
typeof(Age)
typeof(ops_leaders$Age)
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = tally())
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = tally(Age))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n(Age))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n())
ggplot(ops_by_age, aes(Age, age_count)) +
geom_point()
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
View(avg_age_summary)
View(active_batters)
f <- function(vector=1:3){
vector * 5
}
f()
f(c(1,1,1))
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
active_batters <- active_batters %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Clean data to only include certain subset of player:
# The active_batters file will contain players who played at least 40 games
# The active_pitchers file will contain pitchers who have pitched at least 30 innings
active_batters <- active_batters[active_batters$G > 40, ]
active_pitchers <- active_pitchers[active_pitchers$IP > 30.0, ]
# Isolate columns of interest
active_pitchers <- active_pitchers %>%
dplyr::select(Name, Age, Tm, Lg)
active_batters <- active_batters %>%
dplyr::select(Name, Age, Tm, Lg)
# Create summary table with average ages for each team
avg_pitcher_age_summary <- active_pitchers %>%
group_by(Tm) %>%
summarise(avg_pitcher_age = round(mean(Age), 3))
avg_batter_age_summary <- active_batters %>%
group_by(Tm) %>%
summarise(avg_batter_age = round(mean(Age), 3))
# Merge tables
avg_age_summary <- merge(avg_pitcher_age_summary, avg_batter_age_summary, by="Tm")
# Plot
library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
# Now lets take all players with at least 600 AB (league-average-8/9)
# and analyze leaders by age
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n())
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
ggplot(ops_by_age, aes(Age, age_count)) +
geom_point()
rm(list = ls(all.names = TRUE))
ls
rm(list = ls())
team_stats <- read.csv("11-21_team_stats.csv")
current_teams <- read.csv("MLB_teams.csv")
library(tidyverse)
library(dplyr)
library(stringr)
library(reshape2)
setwd("/Users/maxclowdus/Desktop/R_Files/Mathletics")
team_stats <- read.csv("11-21_team_stats.csv")
current_teams <- read.csv("MLB_teams.csv")
team_stats <- team_stats %>%
group_by(Team) %>%
summarise_if(is.numeric,sum) %>%
select(-c("Season")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- merge(team_stats, current_teams, by="Team")
# Calculate mean absolute deviation for Runs Scored vs prediction
mad_rc <- mean(team_stats$err)
current_teams <- read.csv("MLB_teams.csv")
team_stats <- team_stats %>%
group_by(Team) %>%
summarise_if(is.numeric,sum) %>%
select(-c("Season")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- merge(team_stats, current_teams, by="Team")
team_stats <- read.csv("11-21_team_stats.csv")
current_teams <- read.csv("MLB_teams.csv")
team_stats <- team_stats %>%
group_by(Team) %>%
summarise_if(is.numeric,sum) %>%
select(-c("Season")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- merge(team_stats, current_teams, by="Team")
# Calculate mean absolute deviation for Runs Scored vs prediction
avg_runs <- mean(team_stats$R)
perc_err <- mad_rc / avg_runs
# Plotting both results
team_stats_plot <- team_stats %>%
dplyr::select(Tm, R, RC) %>%
melt(id.vars = "Tm")
View(team_stats_plot)
ggplot(team_stats_plot, aes(x=reorder(Tm, value), y=value)) +
geom_point(aes(colour = variable)) +
xlab("Team") +
ylab("Runs Created 2011-2021") +
scale_x_discrete(guide = guide_axis(n.dodge=3))
player_stats <- read.csv("2021_batter_stats.csv")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- player_stats %>%
mutate(Outs =  0.982*AB-H+GIDP+SF+SB+CS,
Games_used = Outs / 27,
RC_G = RC/Games_used)
player_stats <- read.csv("2021_batter_stats.csv")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez",
"Guererro Jr")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- read.csv("2021_batter_stats.csv")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez",
"Guererro Jr.")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- read.csv("2021_batter_stats.csv")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez",
"Guerrero Jr.")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- player_stats %>%
mutate(Outs =  0.982*AB-H+GIDP+SF+SB+CS,
Games_used = Outs / 27,
RC_G = RC/Games_used)
# Using Linear Weights approach
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB, data = team_stats)
summary(lw_model)
View(lw_model)
View(team_stats)
# Using Linear Weights approach
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB-CS, data = team_stats)
summary(lw_model)
# Using Linear Weights approach
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB, data = team_stats)
team_stats <- read.csv("11-21_team_stats.csv")
View(team_stats)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- merge(team_stats, current_teams, by="Team")
avg_runs <- mean(team_stats$R)
mad_rc <- mean(team_stats$err)
perc_err <- mad_rc / avg_runs
team_stats_plot <- team_stats %>%
dplyr::select(Tm, R, RC) %>%
melt(id.vars = "Tm")
ggplot(team_stats_plot, aes(x=reorder(Tm, value), y=value)) +
geom_point(aes(colour = variable)) +
xlab("Team") +
ylab("Runs Created 2011-2021") +
scale_x_discrete(guide = guide_axis(n.dodge=3))
team_stats <- read.csv("11-21_team_stats.csv")
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- read.csv("11-21_team_stats.csv")
team_stats <- team_stats %>%
filter(year != 2020) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- read.csv("11-21_team_stats.csv")
team_stats <- team_stats %>%
filter(Season != 2020) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
err = abs(RC-R))
team_stats <- merge(team_stats, current_teams, by="Team")
avg_runs <- mean(team_stats$R)
mad_rc <- mean(team_stats$err)
perc_err <- mad_rc / avg_runs
team_stats_plot <- team_stats %>%
dplyr::select(Tm, R, RC) %>%
melt(id.vars = "Tm")
ggplot(team_stats_plot, aes(x=reorder(Tm, value), y=value)) +
geom_point(aes(colour = variable)) +
xlab("Team") +
ylab("Runs Created 2011-2021") +
scale_x_discrete(guide = guide_axis(n.dodge=3))
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB, data = team_stats)
summary(lw_model)
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB, data = team_stats)
summary(lw_model)
lw_model <- lm(R ~ X1B+X2B+X3B+HR+BB+HBP+SB, data = team_stats)
summary(lw_model)
View(lw_model)
team_stats -> team_stats %>%
mutate(lw_RC = predict(lw_model))
team_stats <- team_stats %>%
mutate(lw_RC = predict(lw_model))
team_stats <- team_stats %>%
mutate(lw_RC = predict(lw_model),
lw_err = abs(lw_RC - R))
lw_mad_rc <- mean(team_stats$lw_err)
lw_perc_err <- lw_mad_rc / avg_runs
# Using Linear Weights approach
lw_model <- lm(R ~ X1B+X2B+X3B+HR+(BB+HBP)+SB, data = team_stats)
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez",
"Guerrero Jr.")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- read.csv("2021_batter_stats.csv")
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez",
"Guerrero Jr.")) %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP) )
player_stats <- player_stats %>%
mutate(Outs =  0.982*AB-H+GIDP+SF+SB+CS,
Games_used = Outs / 26.72,
RC_G = RC/Games_used)
View(player_stats)
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
dplyr::select(last_name, first_name, scale_factor*c(AB, PA, X1B, X2B, X3B, HR,
BB, HBP, SB)
lw_RC = predict(lw_model),
lw_RC_G = )
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
dplyr::select(last_name, first_name, scale_factor*c(AB, PA, X1B, X2B, X3B, HR,
BB, HBP, SB))
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs)
View(lw_player_projections)
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
scale_factor * lw_player_projections[6:]
lw_player_projections[6:] = scale_factor * lw_player_projections[6:]
lw_player_projections[6:.] = scale_factor * lw_player_projections[6:.]
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs)
lw_player_projections[6:.] = scale_factor * lw_player_projections[6:.]
lw_player_projections[6:.] = lw_player_projections$scale_factor *
lw_player_projections[6:.]
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
scale_factor*select(PA)
lw_player_projections[,seq(6, 28)] = lw_player_projections$scale_factor *
lw_player_projections[,seq(6, 28)]
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs)
lw_player_projections[,seq(6, 28)] = lw_player_projections$scale_factor *
lw_player_projections[,seq(6, 28)]
(scale_factor = 4329 / Outs)
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs)
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs)
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG))
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG, R))
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG, R, K., BB.))
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG, R, K., BB., OBA))
lw_player_projections[,seq(6, 19)] = lw_player_projections$scale_factor *
lw_player_projections[,seq(6, 19)]
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG, R, K., BB., OBA))
lw_player_projections[,seq(6, 19)] = lw_player_projections$scale_factor *
lw_player_projections[,seq(6, 19)]
lw_player_projections <- player_stats %>%
mutate(scale_factor = 4329 / Outs) %>%
select(-c(player_id, year, Age, SLG, OBP, OPS, AVG, R, K., BB., OBA))
lw_player_projections[,seq(6, 19)] = lw_player_projections$scale_factor *
lw_player_projections[,seq(6, 19)]
lw_player_projections <- lw_player_projections %>%
mutate(lw_RC = predict(lw_model),
lw_RC_G = lw_RC / 162)
# We can see from the summary that a HR provides the most weight followed by
# triple, double and single. As expected right? Now lets get projection.
summary(lw_model)$coefficients[,1]
lw_player_projections[,seq(6, 19)]
lw_player_projections <- lw_player_projections %>%
mutate(lw_RC = predict(lw_model, newdata = .),
lw_RC_G = lw_RC / 162)
