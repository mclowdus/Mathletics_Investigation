library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age))
View(active_pitchers)
ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$age))) +
geom_point()
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
active_batters <- active_batters %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Clean data to only include certain subset of player:
# The active_batters file will contain players who played at least 40 games
# The active_pitchers file will contain pitchers who have pitched at least 30 innings
active_batters <- active_batters[active_batters$G > 40, ]
active_pitchers <- active_pitchers[active_pitchers$IP > 30.0, ]
# Isolate columns of interest
active_pitchers <- active_pitchers %>%
dplyr::select(Name, Age, Tm, Lg)
active_batters <- active_batters %>%
dplyr::select(Name, Age, Tm, Lg)
# Create summary table with average ages for each team
avg_pitcher_age_summary <- active_pitchers %>%
group_by(Tm) %>%
summarise(avg_pitcher_age = round(mean(Age), 3))
avg_batter_age_summary <- active_batters %>%
group_by(Tm) %>%
summarise(avg_batter_age = round(mean(Age), 3))
# Merge tables
avg_age_summary <- merge(avg_pitcher_age_summary, avg_batter_age_summary, by="Tm")
# Plot
library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age))
ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$age))) +
geom_point()
View(active_batters)
typeof(active_batters$Age)
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age))
ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age))) +
geom_point()
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age))
+ ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age))) +
geom_point()
ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age))) +
geom_point()
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age))
+ ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age))) +
geom_point()
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
ggplot(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age))) +
geom_point()
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point() +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)), colour="red")
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red", label="League Average")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red", label="League Average") +
geom_text()
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age),label="League Average"),
colour="red") +
geom_text()
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(avg_age_summary$avg_pitcher_age)) +
geom_vline(xintercept = mean(avg_age_summary$avg_batter_age)) +
geom_point(mapping = aes(mean(active_batters$Age), mean(active_pitchers$Age)),
colour="red") +
geom_text(label="League Average")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders.csv")
View(ops_leaders)
ops_leaders <- ops_leaders %>%
group_by(Age) +
summarise(avg_ops_plus = mean(OPS..))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_leaders <- ops_leaders %>%
group_by(Age) +
summarise(avg_ops_plus = mean(OPS_PL))
View(avg_pitcher_age_summary)
ops_leaders <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = mean(OPS_PL))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = mean(OPS_PL))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
View(ops_by_age)
View(ops_by_age)
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
active_batters <- active_batters %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Clean data to only include certain subset of player:
# The active_batters file will contain players who played at least 40 games
# The active_pitchers file will contain pitchers who have pitched at least 30 innings
active_batters <- active_batters[active_batters$G > 40, ]
active_pitchers <- active_pitchers[active_pitchers$IP > 30.0, ]
# Isolate columns of interest
active_pitchers <- active_pitchers %>%
dplyr::select(Name, Age, Tm, Lg)
active_batters <- active_batters %>%
dplyr::select(Name, Age, Tm, Lg)
# Create summary table with average ages for each team
avg_pitcher_age_summary <- active_pitchers %>%
group_by(Tm) %>%
summarise(avg_pitcher_age = round(mean(Age), 3))
avg_batter_age_summary <- active_batters %>%
group_by(Tm) %>%
summarise(avg_batter_age = round(mean(Age), 3))
# Merge tables
avg_age_summary <- merge(avg_pitcher_age_summary, avg_batter_age_summary, by="Tm")
# Plot
library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
# Now lets take all players with at least 600 AB (league-average-8/9)
# and analyze leaders by age
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
gg_point()
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
player_count = count(Name))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
player_count = count(Age))
ops_by_age <- ops_leaders %>%
summarize(player_count = count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_by_age <- ops_leaders %>%
summarize(player_count = dplyr::count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_by_age <- ops_leaders %>%
summarise(player_count = dplyr::count(Age)) %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
type_of(Age)
typeof(Age)
typeof(ops_leaders$Age)
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2))
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = tally())
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = tally(Age))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n(Age))
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n())
ggplot(ops_by_age, aes(Age, age_count)) +
geom_point()
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
View(avg_age_summary)
View(active_batters)
f <- function(vector=1:3){
vector * 5
}
f()
f(c(1,1,1))
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Plot avg batter age vs avg pitcher age for each team using logos as data points
#install.packages("ggimage",dependencies = TRUE)
library(tidyverse)
library(dplyr)
active_pitchers <- read.csv("/Users/maxclowdus/Downloads/active_pitchers_8-3.csv")
active_batters <- read.csv("/Users/maxclowdus/Downloads/active_batters_8-3.csv")
# Clean data to include players active team and his total stats for the year
# Group by player name
active_pitchers <- active_pitchers %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
active_batters <- active_batters %>%
group_by(Name) %>%
# We will get last occurrence of player to get current team
filter(row_number()==n())
# Clean data to only include certain subset of player:
# The active_batters file will contain players who played at least 40 games
# The active_pitchers file will contain pitchers who have pitched at least 30 innings
active_batters <- active_batters[active_batters$G > 40, ]
active_pitchers <- active_pitchers[active_pitchers$IP > 30.0, ]
# Isolate columns of interest
active_pitchers <- active_pitchers %>%
dplyr::select(Name, Age, Tm, Lg)
active_batters <- active_batters %>%
dplyr::select(Name, Age, Tm, Lg)
# Create summary table with average ages for each team
avg_pitcher_age_summary <- active_pitchers %>%
group_by(Tm) %>%
summarise(avg_pitcher_age = round(mean(Age), 3))
avg_batter_age_summary <- active_batters %>%
group_by(Tm) %>%
summarise(avg_batter_age = round(mean(Age), 3))
# Merge tables
avg_age_summary <- merge(avg_pitcher_age_summary, avg_batter_age_summary, by="Tm")
# Plot
library(teamcolors)
library(ggimage)
current_teams <- read.csv("/Users/maxclowdus/Downloads/MLB_teams.csv")
logos <- merge(current_teams, teamcolors, by="name")
avg_age_summary <- merge(logos, avg_age_summary, by="Tm")
# Need to map team city and team name to the abbreviation we currently have
# This is to accommodate the teamscolor package for logos
ggplot(avg_age_summary, aes(avg_batter_age, avg_pitcher_age)) +
ggimage::geom_image(aes(image = logo), size = 0.05, by = "width",
asp = 1.618) +
geom_hline(yintercept = mean(active_pitchers$Age)) +
geom_vline(xintercept = mean(active_batters$Age))
# Now lets take all players with at least 600 AB (league-average-8/9)
# and analyze leaders by age
ops_leaders <- read.csv("/Users/maxclowdus/Downloads/OPS+_Leaders_8-9.csv")
ops_by_age <- ops_leaders %>%
group_by(Age) %>%
summarise(avg_ops_plus = round(mean(OPS_PL), 2),
age_count = n())
ggplot(ops_by_age, aes(Age, avg_ops_plus)) +
geom_point()
ggplot(ops_by_age, aes(Age, age_count)) +
geom_point()
rm(list = ls(all.names = TRUE))
getwd()
cd Desktop
setwd("/Users/maxclowdus/Desktop/R_files/Mathletics")
cd Desktop
getwd()
team_stats <- read.csv("2021_team_stats.csv")
team_stats <- read.csv("2021_team_stats.csv")
head(team_stats)
rm(list = ls(all.names = TRUE))
team_stats <- read.csv("2021_team_stats.csv")
head(team_stats)
clear()
cllear
clear
View(team_stats)
team_stats <- team_state %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP))
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP))
library(tidyverse)
library(dplyr)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP))
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP)*TB)/(AB+BB+HBP),
RC_diff = RC-R)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R)
team_stats$RC_diff / 30
sum(team_stats$RC_diff) / 30
avg(team_stats$R)
mean(team_stats$R)
sum(abs(team_stats$RC_diff)) / 30
mad_rc <- (sum(abs(team_stats$RC_diff)) / 30) / mean(team_stats$R)
player_stats <- read.csv("2021_batter_stats.csv")
head(player_stats)
View(player_stats)
# Using the formula from above to get total runs created for specific players
players_stats <- players_stats %>%
filter(last_name = "Goldschmidt" | "Arenado")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name = "Goldschmidt" | "Arenado")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name == "Goldschmidt" | "Arenado")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name == "Goldschmidt")
player_stats <- read.csv("2021_batter_stats.csv")
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper"))
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez"))
View(player_stats)
player_stats <- read.csv("2021_batter_stats.csv")
head(player_stats)
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez"))
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R)
player_stats <- read.csv("2021_batter_stats.csv")
View(player_stats)
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((b_total_hits+b_walk+b_hit_by_pitch+b_intent_walk)*b_total_bases)
/(b_av+b_walk+b_hit_by_pitch+b_intent_walk),
RC_diff = RC-r_run)
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((b_total_hits+b_walk+b_hit_by_pitch+b_intent_walk)*b_total_bases)
/(b_ab+b_walk+b_hit_by_pitch+b_intent_walk),
RC_diff = RC-r_run)
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((b_total_hits+b_walk+b_hit_by_pitch+b_intent_walk)*b_total_bases)
/(b_ab+b_walk+b_hit_by_pitch+b_intent_walk))
player_stats <- read.csv("2021_batter_stats.csv")
head(player_stats)
# Using the formula from above to get total runs created for specific players
player_stats <- player_stats %>%
filter(last_name %in% c("Goldschmidt",
"Arenado",
"Ohtani",
"Harper",
"Ramirez")) %>%
mutate(RC = ((b_total_hits+b_walk+b_hit_by_pitch+b_intent_walk)*b_total_bases)
/(b_ab+b_walk+b_hit_by_pitch+b_intent_walk))
View(team_stats)
# Plotting both results
ggplot(team_stats, aes(x=Tm, y=RC))
# Plotting both results
ggplot(team_stats, aes(x=Tm, y=RC)) +
geom_point()
team_stats <- read.csv("2021_team_stats.csv")
head(team_stats)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R) %>%
arrange(RC)
ggplot(team_stats, aes(x=Tm, y=RC)) +
geom_point()
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R) %>%
arrange(RC)
# Plotting both results
ggplot(team_stats, aes(x=Tm, y=RC)) +
geom_point()
ggplot(team_stats, aes(x=Tm, y=RC)) +
geom_point()
team_stats <- read.csv("2021_team_stats.csv")
head(team_stats)
team_stats <- team_stats %>%
mutate(RC = ((H+BB+HBP+IBB)*TB)/(AB+BB+IBB+HBP),
RC_diff = RC-R) %>%
arrange(RC)
